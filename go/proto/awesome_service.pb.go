// Code generated by protoc-gen-go.
// source: awesome_service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	awesome_service.proto

It has these top-level messages:
	ResponseType
	RequestType
	Person
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto1.ProtoPackageIsVersion1

type ResponseType struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ResponseType) Reset()                    { *m = ResponseType{} }
func (m *ResponseType) String() string            { return proto1.CompactTextString(m) }
func (*ResponseType) ProtoMessage()               {}
func (*ResponseType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RequestType struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *RequestType) Reset()                    { *m = RequestType{} }
func (m *RequestType) String() string            { return proto1.CompactTextString(m) }
func (*RequestType) ProtoMessage()               {}
func (*RequestType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Person struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age  int32  `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto1.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto1.RegisterType((*ResponseType)(nil), "proto.ResponseType")
	proto1.RegisterType((*RequestType)(nil), "proto.RequestType")
	proto1.RegisterType((*Person)(nil), "proto.Person")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for AwesomeService service

type AwesomeServiceClient interface {
	ListPerson(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (AwesomeService_ListPersonClient, error)
	AddPerson(ctx context.Context, in *Person, opts ...grpc.CallOption) (*ResponseType, error)
}

type awesomeServiceClient struct {
	cc *grpc.ClientConn
}

func NewAwesomeServiceClient(cc *grpc.ClientConn) AwesomeServiceClient {
	return &awesomeServiceClient{cc}
}

func (c *awesomeServiceClient) ListPerson(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (AwesomeService_ListPersonClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AwesomeService_serviceDesc.Streams[0], c.cc, "/proto.AwesomeService/ListPerson", opts...)
	if err != nil {
		return nil, err
	}
	x := &awesomeServiceListPersonClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AwesomeService_ListPersonClient interface {
	Recv() (*Person, error)
	grpc.ClientStream
}

type awesomeServiceListPersonClient struct {
	grpc.ClientStream
}

func (x *awesomeServiceListPersonClient) Recv() (*Person, error) {
	m := new(Person)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *awesomeServiceClient) AddPerson(ctx context.Context, in *Person, opts ...grpc.CallOption) (*ResponseType, error) {
	out := new(ResponseType)
	err := grpc.Invoke(ctx, "/proto.AwesomeService/AddPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AwesomeService service

type AwesomeServiceServer interface {
	ListPerson(*RequestType, AwesomeService_ListPersonServer) error
	AddPerson(context.Context, *Person) (*ResponseType, error)
}

func RegisterAwesomeServiceServer(s *grpc.Server, srv AwesomeServiceServer) {
	s.RegisterService(&_AwesomeService_serviceDesc, srv)
}

func _AwesomeService_ListPerson_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AwesomeServiceServer).ListPerson(m, &awesomeServiceListPersonServer{stream})
}

type AwesomeService_ListPersonServer interface {
	Send(*Person) error
	grpc.ServerStream
}

type awesomeServiceListPersonServer struct {
	grpc.ServerStream
}

func (x *awesomeServiceListPersonServer) Send(m *Person) error {
	return x.ServerStream.SendMsg(m)
}

func _AwesomeService_AddPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Person)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(AwesomeServiceServer).AddPerson(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _AwesomeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AwesomeService",
	HandlerType: (*AwesomeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPerson",
			Handler:    _AwesomeService_AddPerson_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPerson",
			Handler:       _AwesomeService_ListPerson_Handler,
			ServerStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x2c, 0x4f, 0x2d,
	0xce, 0xcf, 0x4d, 0x8d, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x4a, 0x5c, 0x3c, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x21, 0x95, 0x05, 0xa9, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x3a, 0x17, 0x77, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71,
	0x09, 0x58, 0x89, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x3a, 0x4c, 0x15, 0x8c, 0xab,
	0xa4, 0xc7, 0xc5, 0x16, 0x90, 0x5a, 0x54, 0x9c, 0x9f, 0x87, 0xcd, 0x18, 0x21, 0x01, 0x2e, 0x66,
	0x90, 0x1e, 0x26, 0xa0, 0x10, 0x6b, 0x10, 0x88, 0x69, 0x54, 0xc1, 0xc5, 0xe7, 0x08, 0x71, 0x5c,
	0x30, 0xc4, 0x6d, 0x42, 0xc6, 0x5c, 0x5c, 0x3e, 0x99, 0xc5, 0x25, 0x30, 0x53, 0x20, 0x6e, 0xd5,
	0x43, 0xb2, 0x5d, 0x8a, 0x17, 0x2a, 0x06, 0x51, 0xa2, 0xc4, 0x60, 0xc0, 0x28, 0x64, 0xc8, 0xc5,
	0xe9, 0x98, 0x92, 0x02, 0xd5, 0x83, 0x2a, 0x2f, 0x25, 0x0c, 0x37, 0x02, 0xe1, 0x49, 0x25, 0x86,
	0x24, 0x36, 0xb0, 0xa8, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x88, 0x0f, 0xc7, 0x1d, 0x01,
	0x00, 0x00,
}
